@startuml sequenceDiagramUserStory1

!define MyGreen #009000

skinparam participant {
  BackgroundColor MyGreen
}

Actor User
participant App
participant LoginController
participant MainscreenController
participant AddRecipeController
participant RemoteRecipeHubAccess
participant RecipeHubController
participant DirectRecipeHubAccess
participant RecipeFilehandler
participant UserFilehandler
participant FileUtil
database recipes.json
database userinfo.json

activate RecipeHubController
User -> App: Opens the application
activate App
User -> LoginController: Enters login information
activate LoginController
User -> LoginController: Clicks on: "Login"
LoginController -> RemoteRecipeHubAccess: loadProfile(String username)
activate RemoteRecipeHubAccess
RemoteRecipeHubAccess -> RecipeHubController: GET /profile/{username}
RecipeHubController -> DirectRecipeHubAccess: getProfile(String username)
activate DirectRecipeHubAccess
DirectRecipeHubAccess -> UserFilehandler: loadProfile(String username)
activate UserFilehandler
UserFilehandler -> userinfo.json: readProfiles()
userinfo.json -> UserFilehandler: List<Profile>
DirectRecipeHubAccess <-- UserFilehandler: Profile
deactivate UserFilehandler
RecipeHubController <-- DirectRecipeHubAccess: Profile
deactivate DirectRecipeHubAccess
RemoteRecipeHubAccess <-- RecipeHubController: Profile
LoginController <-- RemoteRecipeHubAccess: Profile
deactivate RemoteRecipeHubAccess
LoginController -> MainscreenController: login(ActionEvent event)
deactivate LoginController
activate MainscreenController
User -> MainscreenController: Clicks on: "+ Add Recipe"
MainscreenController -> AddRecipeController: addRecipe(ActionEvent event)
deactivate MainscreenController
activate AddRecipeController
User -> AddRecipeController: Fills in recipe details
User -> AddRecipeController: Clicks on: "Save Recipe"

AddRecipeController -> RemoteRecipeHubAccess: saveRecipe()
activate RemoteRecipeHubAccess
RemoteRecipeHubAccess -> RecipeHubController: PUT /recipelibrary
RecipeHubController -> DirectRecipeHubAccess: saveRecipe(Recipe recipe)
activate DirectRecipeHubAccess
DirectRecipeHubAccess -> RecipeFilehandler: writeRecipe(Recipe recipe)
activate RecipeFilehandler
RecipeFilehandler -> FileUtil: writeRecipe(Path filePath, RecipeLibrary recipelibrary)
activate FileUtil
FileUtil -> recipes.json: Writes recipelibrary to recipes.json
FileUtil -> RecipeFilehandler: true if the file was written successfully
deactivate FileUtil
RecipeFilehandler -> DirectRecipeHubAccess: true if the file was written successfully
deactivate RecipeFilehandler
DirectRecipeHubAccess -> RecipeHubController: true if the file was written successfully
deactivate DirectRecipeHubAccess
RecipeHubController -> RemoteRecipeHubAccess: true if the file was written successfully
RemoteRecipeHubAccess -> AddRecipeController: true if the file was written successfully
deactivate RemoteRecipeHubAccess

User -> AddRecipeController: Clicks on: "Back"
AddRecipeController -> MainscreenController: back(ActionEvent event)
deactivate AddRecipeController
activate MainscreenController
User <-- MainscreenController: Recipe shows in feed
User -> MainscreenController: Clicks on: "Logout"
MainscreenController -> LoginController: logout(ActionEvent event)
deactivate MainscreenController
activate LoginController
User -> App: Closes the application
deactivate LoginController
deactivate App
deactivate RecipeHubController


@enduml
